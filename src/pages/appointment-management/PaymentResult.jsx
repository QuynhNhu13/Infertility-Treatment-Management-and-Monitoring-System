import { useEffect, useState } from "react";
import { useSearchParams } from "react-router-dom"; 
import "../../styles/appointment-management/PaymentResult.css"
import Header from "../../components/Header.jsx";
import Navbar from "../../components/Navbar.jsx";
import Footer from "../../components/Footer.jsx";
import { useNavigate } from "react-router-dom";
export default function PaymentResult() {
    const [status, setStatus] = useState("loading");
    const [searchParams] = useSearchParams();
    const navigate = useNavigate();
    useEffect(() => {
        const checkPaymentResult = async () => {
            const token = localStorage.getItem("token");
            const appointmentPending = localStorage.getItem("appointmentPending");

            if (!appointmentPending) {
                setStatus("invalid");
                return;
            }

            try {
                const res = await fetch("http://localhost:3000/payment-result" + searchParams.toString(), {
                    method: "GET",
                    headers: {
                        "Authorization": `Bearer ${token}`
                    }
                });

                if (!res.ok) throw new Error("L·ªói khi x√°c th·ª±c k·∫øt qu·∫£ thanh to√°n");

                const data = await res.json();
                const paymentCode = data.data;

                if (paymentCode === "00") {
                    // ‚úÖ G·ªçi API x√°c nh·∫≠n l·ªãch kh√°m
                    const confirmRes = await fetch("http://localhost:8080/api/appointments/confirm-appointment", {
                        method: "POST",
                        headers: {
                            "Authorization": `Bearer ${token}`,
                            "Content-Type": "application/json"
                        }
                    });

                    if (!confirmRes.ok) throw new Error("L·ªói khi x√°c nh·∫≠n l·ªãch kh√°m");

                    setStatus("success");
                    localStorage.removeItem("appointmentPending");
                } else {
                    setStatus("failure");
                }
            } catch (error) {
                console.error(error);
                setStatus("error");
            }
        };

        checkPaymentResult();
    }, [searchParams]);

    const thanhToanLai = async () => {
        // e.preventDefault();
        const token = localStorage.getItem("token");
        const res = await fetch("http://localhost:8080/api/payment/vn-pay", {
            method: "GET",
            headers: {
                "Authorization": `Bearer ${token}`,
                "Content-Type": "application/json"
            }
        })

        if (!res.ok) {
            throw new Error("L·ªói khi g·ªçi API thanh to√°n l·∫°i")
        } else {
            const data = await res.json();
            window.location.href = data.data.paymentUrl;
        }

    }
    return (
        <>
            <Header />
            <Navbar />
            <div className="layout-thu-cam-on" >
                {
                    status === "success" && (
                        <div className="thu-cam-on">
                            <div className="title-paymentRS" >
                                <h1>DƒÇNG K√ù KH√ÅM B·ªÜNH TH√ÄNH C√îNG</h1>
                            </div>

                            <div className="khung-thong-tin-pr">
                                <div className="thong-tin-pr">
                                    <p><b>K√≠nh g·ª≠i Qu√Ω kh√°ch</b><br />
                                        H·ªá th·ªëng B·ªánh vi·ªán ƒêa khoa Th√†nh Nh√¢n c·∫£m ∆°n qu√Ω kh√°ch ƒë√£ g·ª≠i y√™u c·∫ßu ƒë·∫∑t l·ªãch kh√°m th√¥ng qua trang website c·ªßa b·ªánh vi·ªán.<br /><br />
                                        Y√™u c·∫ßu c·ªßa qu√Ω kh√°ch ƒë√£ ƒë∆∞·ª£c chuy·ªÉn ƒë·∫øn b·ªô ph·∫≠n T·ªïng ƒë√†i, v√† ch√∫ng t√¥i s·∫Ω li√™n h·ªá l·∫°i v·ªõi qu√Ω kh√°ch theo s·ªë ƒëi·ªán tho·∫°i 0123456789 ƒë·ªÉ x√°c nh·∫≠n l·ªãch h·∫πn.<br /><br />
                                        Tr∆∞·ªùng h·ª£p qu√Ω kh√°ch c·∫ßn h·ªó tr·ª£ th√™m, xin vui l√≤ng li√™n h·ªá ƒë·∫øn s·ªë hotline:<br />
                                        <b>B·ªánh vi·ªán ƒêa khoa Th√†nh Nh√¢n TP. HCM: 123-456-7890 <br /><br />
                                            Tr√¢n tr·ªçng c·∫£m ∆°n!</b>
                                    </p>
                                </div>
                                <br /><br />
                                <button onClick={navigate("/")} >TRANG CH·ª¶</button>
                            </div>
                        </div>
                    )
                }

                {
                    status === "failure" && (
                        <div className="thu-cam-on">
                            <div className="title-paymentRS">
                                <h1>THANH TO√ÅN TH·∫§T B·∫†I.</h1>
                            </div>
                            <button onClick={thanhToanLai} >THANH TO√ÅN L·∫†I</button>
                        </div>
                    )
                }

                <div className="payment-result-container">
                    {status === "loading" && <p>üîÑ ƒêang x·ª≠ l√Ω k·∫øt qu·∫£ thanh to√°n...</p>}

                    {status === "invalid" && <div className="error-box">‚ö†Ô∏è Kh√¥ng t√¨m th·∫•y l·ªãch thanh to√°n ƒëang ch·ªù.</div>}
                    {status === "error" && <div className="error-box">üö´ C√≥ l·ªói x·∫£y ra khi x√°c minh k·∫øt qu·∫£ thanh to√°n.</div>}
                </div>
            </div>

            <Footer />
        </>

    );
}
