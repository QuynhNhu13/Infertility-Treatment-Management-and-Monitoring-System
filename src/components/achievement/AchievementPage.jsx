import React, { useState, useEffect } from "react";
import "../../styles/achievement/AchievementPage.css";
import Header from "../Header";
import Navbar from "../Navbar";
import Footer from "../Footer";

const AchievementPage = () => {
    const [activeSection, setActiveSection] = useState(0);
    const [isVisible, setIsVisible] = useState({});
    const [selectedAchievement, setSelectedAchievement] = useState(null);

    const achievements = [
        {
            id: 1,
            title: "H∆°n 50.000 ca ƒëi·ªÅu tr·ªã th√†nh c√¥ng",
            description: "M·ªói nƒÉm v·ªõi t·ª∑ l·ªá ph·ª•c h·ªìi cao v√† m·ª©c ƒë·ªô h√†i l√≤ng t·ª´ b·ªánh nh√¢n tr√™n 95%",
            icon: "üè•",
            stats: "50,000+",
            category: "medical"
        },
        {
            id: 2,
            title: "K·ªπ thu·∫≠t cao ti√™n ti·∫øn",
            description: "M·ªï n·ªôi soi, t√°n s·ªèi ngo√†i c∆° th·ªÉ, ƒëi·ªÅu tr·ªã ung th∆∞ b·∫±ng h√≥a tr·ªã - x·∫° tr·ªã k·∫øt h·ª£p",
            icon: "‚öïÔ∏è",
            stats: "20+",
            category: "technology"
        },
        {
            id: 3,
            title: "Trung t√¢m h·ªó tr·ª£ sinh s·∫£n v·ªõi nhi·ªÅu ph∆∞∆°ng ph√°p ti√™n ti·∫øn",
            description: "ƒê·∫°t t·ªâ l·ªá th√†nh c√¥ng cao v∆∞·ª£t m·ª©c trung b√¨nh qu·ªëc gia",
            icon: "üë∂",
            stats: "85%",
            category: "fertility"
        },
        {
            id: 4,
            title: "Ch·ª©ng nh·∫≠n ISO 9001:2015",
            description: "Trong qu·∫£n l√Ω v√† ƒëi·ªÅu h√†nh b·ªánh vi·ªán",
            icon: "üèÜ",
            stats: "ISO",
            category: "quality"
        },
        {
            id: 5,
            title: "Nghi√™n c·ª©u khoa h·ªçc",
            description: "H∆°n 100 ƒë·ªÅ t√†i nghi√™n c·ª©u y khoa ·ª©ng d·ª•ng th·ª±c ti·ªÖn",
            icon: "üî¨",
            stats: "100+",
            category: "research"
        },
        {
            id: 6,
            title: "Kh√°m b·ªánh mi·ªÖn ph√≠",
            description: "H∆°n 300 ƒë·ª£t kh√°m b·ªánh mi·ªÖn ph√≠ cho ng∆∞·ªùi ngh√®o t·∫°i c√°c v√πng s√¢u v√πng xa",
            icon: "‚ù§Ô∏è",
            stats: "300+",
            category: "community"
        }
    ];

    const sections = [
        {
            title: "Gi·ªõi thi·ªáu chung",
            content: "Tr·∫£i qua h√†nh tr√¨nh h∆°n m·ªôt th·∫≠p k·ª∑ kh√¥ng ng·ª´ng n·ªó l·ª±c v√† ph√°t tri·ªÉn, B·ªánh vi·ªán ƒêa khoa Th√†nh Nh√¢n ƒë√£ t·ª´ng b∆∞·ªõc kh·∫≥ng ƒë·ªãnh v·ªã th·∫ø l√† m·ªôt trong nh·ªØng c∆° s·ªü y t·∫ø h√†ng ƒë·∫ßu t·∫°i khu v·ª±c mi·ªÅn Nam Vi·ªát Nam."
        },
        {
            title: "Th√†nh t·ª±u y t·∫ø",
            content: "V·ªõi s·ª© m·ªánh 'ƒê·∫∑t ng∆∞·ªùi b·ªánh l√†m trung t√¢m', ch√∫ng t√¥i kh√¥ng ch·ªâ ch√∫ tr·ªçng v√†o ch·∫•t l∆∞·ª£ng chuy√™n m√¥n cao m√† c√≤n ƒë·∫∑t y·∫øu t·ªë nh√¢n vƒÉn, t·∫≠n t√¢m v√† chuy√™n nghi·ªáp v√†o t·ª´ng ho·∫°t ƒë·ªông kh√°m ch·ªØa b·ªánh."
        },
        {
            title: "Nghi√™n c·ª©u & ƒê√†o t·∫°o",
            content: "Ch√∫ng t√¥i ƒë·∫©y m·∫°nh ho·∫°t ƒë·ªông nghi√™n c·ª©u khoa h·ªçc v√† ƒë√†o t·∫°o chuy√™n m√¥n v·ªõi h∆°n 100 ƒë·ªÅ t√†i nghi√™n c·ª©u y khoa ·ª©ng d·ª•ng th·ª±c ti·ªÖn ƒë∆∞·ª£c th·ª±c hi·ªán."
        },
        {
            title: "Ho·∫°t ƒë·ªông c·ªông ƒë·ªìng",
            content: "B·ªánh vi·ªán Th√†nh Nh√¢n c√≤n l√† ƒë·ªãa ch·ªâ tin c·∫≠y trong c√°c ho·∫°t ƒë·ªông v√¨ c·ªông ƒë·ªìng v·ªõi h∆°n 300 ƒë·ª£t kh√°m b·ªánh mi·ªÖn ph√≠ cho ng∆∞·ªùi ngh√®o."
        }
    ];

    useEffect(() => {
        const observer = new IntersectionObserver(
            (entries) => {
                entries.forEach((entry) => {
                    setIsVisible(prev => ({
                        ...prev,
                        [entry.target.id]: entry.isIntersecting
                    }));
                });
            },
            { threshold: 0.1 }
        );

        document.querySelectorAll('[id^="section-"]').forEach((el) => {
            observer.observe(el);
        });

        return () => observer.disconnect();
    }, []);

    const filterAchievements = (category) => {
        if (category === 'all') return achievements;
        return achievements.filter(achievement => achievement.category === category);
    };

    const [filter, setFilter] = useState('all');
    const [filteredAchievements, setFilteredAchievements] = useState(achievements);

    useEffect(() => {
        setFilteredAchievements(filterAchievements(filter));
    }, [filter]);

    return (
        <>
            <Header />
            <Navbar />
            <div className="ach-page-container">
                <header className="ach-page-hero">
                    <div className="ach-page-hero-content">
                        <h1 className="ach-page-hero-title">TH√ÄNH T·ª∞U N·ªîI B·∫¨T</h1>
                        <h2 className="ach-page-hero-subtitle">B·ªÜNH VI·ªÜN ƒêA KHOA TH√ÄNH NH√ÇN</h2>
                        <div className="ach-page-hero-statistics">
                            <div className="ach-page-stat-item">
                                <span className="ach-page-stat-number">10+</span>
                                <span className="ach-page-stat-label">NƒÉm kinh nghi·ªám</span>
                            </div>
                            <div className="ach-page-stat-item">
                                <span className="ach-page-stat-number">50K+</span>
                                <span className="ach-page-stat-label">B·ªánh nh√¢n</span>
                            </div>
                            <div className="ach-page-stat-item">
                                <span className="ach-page-stat-number">95%</span>
                                <span className="ach-page-stat-label">H√†i l√≤ng</span>
                            </div>
                        </div>
                    </div>
                </header>

                <nav className="ach-page-tabs">
                    {sections.map((section, index) => (
                        <button
                            key={index}
                            className={`ach-page-tab-btn ${activeSection === index ? 'ach-page-tab-active' : ''}`}
                            onClick={() => setActiveSection(index)}
                        >
                            {section.title}
                        </button>
                    ))}
                </nav>


                <section className="ach-page-main-content">
                    <div className={`ach-page-content-wrapper ${isVisible[`section-${activeSection}`] ? 'ach-page-content-visible' : ''}`} id={`section-${activeSection}`}>
                        <h3 className="ach-page-content-title">{sections[activeSection].title}</h3>
                        <p className="ach-page-content-desc">{sections[activeSection].content}</p>
                    </div>
                </section>


                <div className="ach-page-filter-section">
                    <h3>L·ªçc th√†nh t·ª±u theo danh m·ª•c</h3>
                    <div className="ach-page-filter-controls">
                        {['all', 'medical', 'technology', 'fertility', 'quality', 'research', 'community'].map(category => (
                            <button
                                key={category}
                                className={`ach-page-filter-btn ${filter === category ? 'ach-page-filter-active' : ''}`}
                                onClick={() => setFilter(category)}
                            >
                                {category === 'all' ? 'T·∫•t c·∫£' :
                                    category === 'medical' ? 'Y t·∫ø' :
                                        category === 'technology' ? 'C√¥ng ngh·ªá' :
                                            category === 'fertility' ? 'Sinh s·∫£n' :
                                                category === 'quality' ? 'Ch·∫•t l∆∞·ª£ng' :
                                                    category === 'research' ? 'Nghi√™n c·ª©u' : 'C·ªông ƒë·ªìng'}
                            </button>
                        ))}
                    </div>
                </div>


                <div className="ach-page-grid">
                    {filteredAchievements.map((achievement, index) => (
                        <div
                            key={achievement.id}
                            className={`ach-page-grid-item ${selectedAchievement === achievement.id ? 'ach-page-item-selected' : ''}`}
                            onClick={() => setSelectedAchievement(selectedAchievement === achievement.id ? null : achievement.id)}
                            style={{ animationDelay: `${index * 0.1}s` }}
                        >
                            <div className="ach-page-item-icon">{achievement.icon}</div>
                            <div className="ach-page-item-stats">{achievement.stats}</div>
                            <h4 className="ach-page-item-title">{achievement.title}</h4>
                            <p className="ach-page-item-desc">{achievement.description}</p>
                            <div className="ach-page-item-hover">
                                <span>Nh·∫•n ƒë·ªÉ xem chi ti·∫øt</span>
                            </div>
                        </div>
                    ))}
                </div>


                {selectedAchievement && (
                    <div className="ach-page-popup-overlay" onClick={() => setSelectedAchievement(null)}>
                        <div className="ach-page-popup-content" onClick={(e) => e.stopPropagation()}>
                            {(() => {
                                const achievement = achievements.find(a => a.id === selectedAchievement);
                                return (
                                    <>
                                        <button className="ach-page-popup-close" onClick={() => setSelectedAchievement(null)}>√ó</button>
                                        <div className="ach-page-popup-header">
                                            <div className="ach-page-popup-icon">{achievement.icon}</div>
                                            <h3>{achievement.title}</h3>
                                        </div>
                                        <div className="ach-page-popup-body">
                                            <p>{achievement.description}</p>
                                            <div className="ach-page-popup-stats">
                                                <div className="ach-page-popup-stat">
                                                    <span className="ach-page-popup-value">{achievement.stats}</span>
                                                    <span className="ach-page-popup-desc">Ch·ªâ s·ªë ƒë·∫°t ƒë∆∞·ª£c</span>
                                                </div>
                                            </div>
                                        </div>
                                    </>
                                );
                            })()}
                        </div>
                    </div>
                )}


                <section className="ach-page-timeline-wrapper">
                    <h3 className="ach-page-timeline-heading">H√†nh tr√¨nh ph√°t tri·ªÉn</h3>
                    <div className="ach-page-timeline-container">
                        <div className="ach-page-timeline-event">
                            <div className="ach-page-timeline-dot"></div>
                            <div className="ach-page-timeline-info">
                                <h4>2014</h4>
                                <p>Th√†nh l·∫≠p b·ªánh vi·ªán v·ªõi t·∫ßm nh√¨n ph·ª•c v·ª• c·ªông ƒë·ªìng</p>
                            </div>
                        </div>
                        <div className="ach-page-timeline-event">
                            <div className="ach-page-timeline-dot"></div>
                            <div className="ach-page-timeline-info">
                                <h4>2018</h4>
                                <p>ƒê·∫°t ch·ª©ng nh·∫≠n ISO 9001:2015</p>
                            </div>
                        </div>
                        <div className="ach-page-timeline-event">
                            <div className="ach-page-timeline-dot"></div>
                            <div className="ach-page-timeline-info">
                                <h4>2021</h4>
                                <p>Kh√°nh th√†nh Trung t√¢m h·ªó tr·ª£ sinh s·∫£n</p>
                            </div>
                        </div>
                        <div className="ach-page-timeline-event">
                            <div className="ach-page-timeline-dot"></div>
                            <div className="ach-page-timeline-info">
                                <h4>2024</h4>
                                <p>M·ªü r·ªông quy m√¥</p>
                            </div>
                        </div>
                    </div>
                </section>

                <section className="ach-page-action-section">
                    <div className="ach-page-action-content">
                        <h3>ƒê·ªìng h√†nh c√πng s·ª©c kh·ªèe c·ªßa b·∫°n</h3>
                        <p>H√£y ƒë·ªÉ ch√∫ng t√¥i chƒÉm s√≥c s·ª©c kh·ªèe cho b·∫°n v√† gia ƒë√¨nh</p>
                    </div>
                </section>

                <Footer />
            </div>
        </>
    );
};

export default AchievementPage;
